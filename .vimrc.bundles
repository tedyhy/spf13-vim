" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"   This is the personal .vimrc.bundles file of Tedyhy.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
" }

" Environment {

  " Basics {
    set nocompatible        " Must be first line
    set background=dark     " Assume a dark background
  " }

  " Setup Bundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
    filetype off
    set rtp+=~/.vim/bundle/vundle
    call vundle#rc()
  " }

  " Add an UnBundle command {
  function! UnBundle(arg, ...)
    let bundle = vundle#config#init_bundle(a:arg, a:000)
    call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
  endfunction

  com! -nargs=+         UnBundle
  \ call UnBundle(<args>)
  " }

" }

" Bundles {

  " Deps {
    Bundle 'gmarik/vundle'
    Bundle 'MarcWeber/vim-addon-mw-utils'
    Bundle 'tomtom/tlib_vim'
    if executable('ag')
      Bundle 'mileszs/ack.vim'
      let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
    elseif executable('ack-grep')
      let g:ackprg="ack-grep -H --nocolor --nogroup --column"
      Bundle 'mileszs/ack.vim'
    elseif executable('ack')
      Bundle 'mileszs/ack.vim'
    endif
  " }

  " list only the plugin groups you will use
  if !exists('g:spf13_bundle_groups')
    let g:spf13_bundle_groups=['general', 'neocomplete', 'programming', 'javascript', 'html', 'misc',]
  endif

  " To override all the included bundles, add the following to your
  if !exists("g:override_spf13_bundles")

    " General {
      if count(g:spf13_bundle_groups, 'general')
        Bundle 'scrooloose/nerdtree'
        Bundle 'altercation/vim-colors-solarized'
        Bundle 'spf13/vim-colors'
        Bundle 'tpope/vim-surround'
        Bundle 'tpope/vim-repeat'
        Bundle 'rhysd/conflict-marker.vim'
        Bundle 'jiangmiao/auto-pairs'
        Bundle 'ctrlpvim/ctrlp.vim'
        Bundle 'tacahiroy/ctrlp-funky'
        Bundle 'terryma/vim-multiple-cursors'
        Bundle 'vim-scripts/sessionman.vim'
        Bundle 'matchit.zip'
        Bundle 'vim-airline/vim-airline'
        Bundle 'vim-airline/vim-airline-themes'
        Bundle 'powerline/fonts'
        Bundle 'bling/vim-bufferline'
        Bundle 'easymotion/vim-easymotion'
        Bundle 'jistr/vim-nerdtree-tabs'
        Bundle 'flazz/vim-colorschemes'
        Bundle 'mbbill/undotree'
        Bundle 'nathanaelkane/vim-indent-guides'
        if !exists('g:spf13_no_views')
          Bundle 'vim-scripts/restore_view.vim'
        endif
        Bundle 'mhinz/vim-signify'
        Bundle 'tpope/vim-abolish.git'
        Bundle 'osyo-manga/vim-over'
        Bundle 'kana/vim-textobj-user'
        Bundle 'kana/vim-textobj-indent'
        Bundle 'gcmt/wildfire.vim'
      endif
    " }

    " General Programming {
      if count(g:spf13_bundle_groups, 'programming')
        Bundle 'vim-syntastic/syntastic'

        if executable('ctags')
          Bundle 'majutsushi/tagbar'
        endif
      endif
    " }

    " Snippets & AutoComplete {
      if count(g:spf13_bundle_groups, 'neocomplete')
        Bundle 'Shougo/neocomplete.vim.git'
      endif
    " }

    " Javascript {
      if count(g:spf13_bundle_groups, 'javascript')
        Bundle 'elzr/vim-json'
        Bundle 'groenewege/vim-less'
        Bundle 'cakebaker/scss-syntax.vim'
        Bundle 'pangloss/vim-javascript'
        Bundle 'mxw/vim-jsx'
      endif
    " }

    " HTML {
      if count(g:spf13_bundle_groups, 'html')
        Bundle 'amirh/HTML-AutoCloseTag'
        Bundle 'hail2u/vim-css3-syntax'
        Bundle 'gorodinskiy/vim-coloresque'
        Bundle 'tpope/vim-haml'
        Bundle 'mattn/emmet-vim'
      endif
    " }

    " Misc {
      if count(g:spf13_bundle_groups, 'misc')
        Bundle 'tpope/vim-markdown'
      endif
    " }

  endif

" }
